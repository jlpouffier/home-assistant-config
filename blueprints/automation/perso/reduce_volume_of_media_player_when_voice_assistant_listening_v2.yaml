blueprint:
  name: Reduce volume of a media player when a voice assistant is listening
  description: |
    Temporarily reduce the volume of every `media_player` in the same area as the voice assistant when a command is in progress. The automation will automatically skips `media_player` that are `off` or in `standby`.
  domain: automation
  author: JLo
  input:
    assist_satellite_entity:
      name: Assist Sattelite
      description: Assist Sattelite entity representing your voice assistant
      selector:
        entity:
          filter:
            domain: "assist_satellite"
    advanced:
      name: Advanced Settings
      icon: mdi:cog
      description: Advanced settings of the blueprint
      collapsed: true
      input:
        additional_target:
          name: Additional target
          description: Additional target (for exmaple if you want to also target nearby areas). The automation will automatically skips `media_player` that are `off` or in `standby`.
          default: {}
          selector:
            target:
              entity:
                domain: media_player

triggers:
  - trigger: state
    entity_id: !input assist_satellite_entity
    to: "listening"

actions:
  - variables:
      assist_satellite_entity: !input assist_satellite_entity
      additional_target: !input additional_target
      voice_assistant_players: |
        {{ expand(device_entities(device_id(assist_satellite_entity))) |
            selectattr('domain', 'eq', 'media_player') | 
            map(attribute='entity_id') | 
            unique | 
            list
        }}
      default_target_media_players: |
        {% set playing_media_players = expand(
          area_entities(area_id(assist_satellite_entity)) ) | 
          selectattr('domain', 'eq', 'media_player') | 
          rejectattr('state', 'eq', 'off') | 
          rejectattr('state', 'eq', 'standby')  | 
          rejectattr('entity_id', 'in', voice_assistant_players)  | 
          map(attribute='entity_id') | 
          unique | 
          list
        %}

        {{ playing_media_players }}
      additional_target_media_players: |
        {% set area_ids = [additional_target.area_id] if additional_target.area_id is string else additional_target.area_id | default([]) %}
        {% set device_ids = [additional_target.device_id] if additional_target.device_id is string else additional_target.device_id | default([]) %}
        {% set entity_ids = [additional_target.entity_id] if additional_target.entity_id is string else additional_target.entity_id | default([]) %}

        {% set area_entities = expand(
          area_ids | 
          map('area_entities') | 
          list) 
        %}
        {% set device_entities = expand(
          device_ids | 
          map('device_entities') | 
          list) 
        %}
        {% set entity_entities = expand(entity_ids) %}

        {% set all_entities = area_entities + device_entities + entity_entities %}

        {% set additional_players = 
          all_entities | 
          selectattr('domain', 'eq', 'media_player') | 
          rejectattr('state', 'eq', 'off')  | 
          rejectattr('state', 'eq', 'standby') | 
          rejectattr('entity_id', 'in', voice_assistant_players)  | 
          map(attribute='entity_id') | 
          unique | 
          list 
        %}

        {{ additional_players }}
      final_target: |
        {{ (default_target_media_players + additional_target_media_players) | unique | list }}
      scene_previous_volume: |
        [
          {% for player in final_target %}
            {
              "entity_id": "{{player}}",
              "volume_level": "{{ state_attr(player,'volume_level') }}"
            },
          {% endfor %}
        ]
      scene_ducked_volume: |
        [
          {% for player in final_target %}
            {
              "entity_id": "{{player}}",
              "volume_level": "{{ (state_attr(player,'volume_level') | float (0) * 0.5) | round (2)}}"
            },
          {% endfor %}
        ]
  - repeat:
      for_each: "{{scene_ducked_volume}}"
      sequence:
        action: media_player.volume_set
        data:
          volume_level: "{{repeat.item.volume_level}}"
          entity_id: "{{repeat.item.entity_id}}"
  - wait_for_trigger:
      - trigger: state
        entity_id: !input assist_satellite_entity
        to: idle
    timeout:
      hours: 0
      minutes: 1
      seconds: 0
      milliseconds: 0
  - repeat:
      for_each: "{{scene_previous_volume}}"
      sequence:
        action: media_player.volume_set
        data:
          volume_level: "{{repeat.item.volume_level}}"
          entity_id: "{{repeat.item.entity_id}}"

mode: single
