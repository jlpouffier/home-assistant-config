blueprint:
  name: Reduce volume of a media player when a voice assistant is listening
  description: |
    Temporarily reduce the volume of every `media_player` in the same area as the voice assistant when a command is in progress. The automation will automatically skips `media_player` that are `off` or in `standby`.
  domain: automation
  author: JLo
  input:
    assist_satellite_entity:
      name: Assist Sattelite
      description: Assist Sattelite entity representing your voice assistant
      selector:
        entity:
          filter:
            domain: "assist_satellite"
    advanced:
      name: Advanced Settings
      icon: mdi:cog
      description: Advanced settings of the blueprint
      collapsed: true
      input:
        custom_target:
          name: Custom target
          description: By default, this blueprint targets every `media_player in the same area as the voice assistant. Use this target to override this behavior. The automation will automatically skips `media_player` that are `off` or in `standby`.
          default: {}
          selector:
            target:
              entity:
                domain: media_player
        custom_ducking_volume:
          name: Custom ducking volume
          description: By default, the blueprint ducks all `media_player` of the target by 50%. If this is too loud, you can use this field to set an absolute volume level. All `media_player` will be ducked to this volume.
          default: ""
          selector:
            number:
              min: 0
              max: 1
              step: 0.05
              mode: slider

triggers:
  - trigger: state
    entity_id: !input assist_satellite_entity
    to:
      - "listening"
      - "responding"

actions:
  - variables:
      assist_satellite_entity: !input assist_satellite_entity
      custom_target: !input custom_target
      custom_ducking_volume: !input custom_ducking_volume
      voice_assistant_players: |
        {{ expand(device_entities(device_id(assist_satellite_entity))) |
            selectattr('domain', 'eq', 'media_player') | 
            map(attribute='entity_id') | 
            unique | 
            list
        }}
      default_target_media_players: |
        {% set players = expand(
          area_entities(area_id(assist_satellite_entity)) ) | 
          selectattr('domain', 'eq', 'media_player') | 
          rejectattr('state', 'eq', 'off') | 
          rejectattr('state', 'eq', 'standby')  | 
          rejectattr('entity_id', 'in', voice_assistant_players)  | 
          map(attribute='entity_id') | 
          unique | 
          list
        %}

        {{ players }}
      custom_target_media_players: |
        {% set area_ids = [custom_target.area_id] if custom_target.area_id is string else custom_target.area_id | default([]) %}
        {% set device_ids = [custom_target.device_id] if custom_target.device_id is string else custom_target.device_id | default([]) %}
        {% set entity_ids = [custom_target.entity_id] if custom_target.entity_id is string else custom_target.entity_id | default([]) %}

        {% set area_entities = expand(
          area_ids | 
          map('area_entities') | 
          list) 
        %}
        {% set device_entities = expand(
          device_ids | 
          map('device_entities') | 
          list) 
        %}
        {% set entity_entities = expand(entity_ids) %}

        {% set all_entities = area_entities + device_entities + entity_entities %}

        {% set players = 
          all_entities | 
          selectattr('domain', 'eq', 'media_player') | 
          rejectattr('state', 'eq', 'off')  | 
          rejectattr('state', 'eq', 'standby') | 
          rejectattr('entity_id', 'in', voice_assistant_players)  | 
          map(attribute='entity_id') | 
          unique | 
          list 
        %}

        {{ players }}
      final_target: |
        {{ custom_target_media_players if custom_target_media_players | length > 0 else default_target_media_players }}
      volumes: |
        [
          {% for player in final_target %}
            {
              "entity_id": "{{player}}",
              "original_volume_level": "{{ state_attr(player,'volume_level') | float }}",
              "ducked_volume_level": "{{ min(custom_ducking_volume,state_attr(player,'volume_level') | float ) if custom_ducking_volume is number else (state_attr(player,'volume_level') | float (0) * 0.5) | round (2)}}"
            },
          {% endfor %}
        ]
  - repeat:
      for_each: "{{volumes}}"
      sequence:
        action: media_player.volume_set
        data:
          volume_level: "{{repeat.item.ducked_volume_level}}"
          entity_id: "{{repeat.item.entity_id}}"
  - wait_for_trigger:
      - trigger: state
        entity_id: !input assist_satellite_entity
        to: idle
        for: 1
    timeout:
      hours: 0
      minutes: 1
      seconds: 0
      milliseconds: 0
  - repeat:
      for_each: "{{volumes}}"
      sequence:
        - if:
            - condition: template
              value_template: "{{state_attr(repeat.item.entity_id, 'volume_level') | float == repeat.item.ducked_volume_level | float }}"
          then:
            action: media_player.volume_set
            data:
              volume_level: "{{repeat.item.original_volume_level}}"
              entity_id: "{{repeat.item.entity_id}}"

mode: single
max_exceeded: silent
